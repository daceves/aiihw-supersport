<?php

/**
 * @file
 * This is the Supersport Ajax module.
 *
 * Written in PHP 5.3
 */

define('SUPERSPORT_AJAX_FORM_WRAPPER', 'supersport-event-node-form-wrapper');

// Reminder - change whenever function definition is changed
define('SUPERSPORT_AJAX_LEAGUE_SELECT', 'supersport_ajax_sportteams_callback');
define('SUPERSPORT_AJAX_SPORTS_SELECT', 'supersport_ajax_sportleague_callback');

/**
 * Implements the hook_form_alter().
 */
function supersport_ajax_form_alter(&$form, &$form_state, $form_id) {

  switch($form_id) {
	case 'event_node_form':

      // Get the language value in order to have
	  // deeper access in the array
	  $language = $form['field_sport']['#language'];

      // Wrap whole form
      $form['#prefix'] = '<div id="' . SUPERSPORT_AJAX_FORM_WRAPPER . '">';
      $form['#suffix'] = '</div>';

      // Enforce filters
      $form['#validate'][] = '_supersport_ajax_form_validate';

	  // Modify the menus to be AJAX enabled
	  $form['field_sport'][$language]['#ajax'] = array(
		'callback' => SUPERSPORT_AJAX_SPORTS_SELECT,
		'wrapper' => SUPERSPORT_AJAX_FORM_WRAPPER,
		'method' => 'replace',
		'effect' => 'fade',
	  );

	  $form['field_league'][$language]['#ajax'] = array(
		'callback' => SUPERSPORT_AJAX_LEAGUE_SELECT,
		'wrapper' => SUPERSPORT_AJAX_FORM_WRAPPER,
		'method' => 'replace',
		'effect' => 'fade',
	  );

      // Dictate default options
      _supersport_ajax_default_options($form, $form_state, $language);

	  break;
  }
}

/**
 * Implements the callback function for the
 * sports menu
 *
 * Get the current value after selecting an item
 * in sport menu to update the league menu with
 * leagues only within that sport
 *
 * @return $form['field_league']
 * 	The league menu modified with leagues
 *  under the selected sport
 */
function supersport_ajax_sportleague_callback(&$form, &$form_state) {

  $parent_field = 'field_sport';

  // Get the language value in order to have
  // deeper access in the array
  $lang = $form[$parent_field]['#language'];

  // // Modify taxonomy
  // League
  // Access the selected value
  $sport_tid = $form[$parent_field][$lang]['#value'];
  $options = _supersport_ajax_get_options('league', $parent_field, $sport_tid, $lang);
  $form['field_league'][$lang]['#options'] = $options;

  // Teams
  // Clear teams list when sport is changed
  $form['field_teams'][$lang]['#options'] = _supersport_ajax_default_option();

  return $form;
}

/**
 * Implements the callback function for the
 * league menu
 *
 * Get the current value after selecting an item
 * in league menu to update the team menu with
 * teams only within that league
 *
 * @return $form['field_teams']
 * 	The teams menu modified with teams
 *  under the selected league
 */
function supersport_ajax_sportteams_callback(&$form, &$form_state) {

  $parent_field = 'field_league';
  $sport_field = 'field_sport';

  // Get the language value in order to have
  // deeper access in the array
  $lang = $form[$parent_field]['#language'];

  // // Modify taxonomy
  // League
  // Enforce league options
  $sport_tid = $form[$sport_field][$lang]['#value'];
  $options = _supersport_ajax_get_options('league', $sport_field, $sport_tid, $lang);
  $form['field_league'][$lang]['#options'] = $options;

  // Teams
  // Access the selected value
  $league_tid = $form[$parent_field][$lang]['#value'];
  $options = _supersport_ajax_get_options('teams', $parent_field, $league_tid, $lang);
  $form['field_teams'][$lang]['#options'] = $options;

  return $form;
}

/**
 * Creates a HTML options array from parent taxonomy
 *
 * Hierarchy - Sports > Leagues > Teams
 *
 * @param $taxonomy_name
 *  Name of the target taxonomy
 * @param $parent_field
 *  Field name of the target taxonomy parent
 * @param $parent_tid
 *  Taxonomy Term ID of the containing taxonomy
 * @param $language
 *  Current system language
 * @return array
 *  Array of valid child options
 *    Keys - Taxonomy Term ID
 *    Values - Name of taxonomy
 */
function _supersport_ajax_get_options($taxonomy_name, $parent_field, $parent_tid, $language) {

  // Load the terms for leagues and filter out league not
  // associated with the current value of the sport
  $vocabulary = taxonomy_vocabulary_machine_name_load($taxonomy_name);
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));

  // Add default option: '_none'
  $options = _supersport_ajax_default_option();

  // Sift through the terms and keep those that
  // fit with the selected sport
  foreach ($terms as $key => $value) {

    // TODO This is using PHP 5.3 array syntax
    $field = $value->$parent_field;
    if($field[$language][0]['tid'] == $parent_tid) {
      $options[$key] = $value->name;
    }
  }

  return $options;
}

/**
 * Sets default options for the form
 *
 * @param $form
 *  $form from hook_form_alter()
 *  Must be form of content-type "Event"
 * @param $form_state
 *  $form_state from hook_form_alter()
 * @param $language
 *  Parsed language field from form
 */
function _supersport_ajax_default_options(&$form, $form_state, $language) {

  $default_option = _supersport_ajax_default_option();

  // Check if this node exists, ie: EDIT hit
  if (isset($form['nid']['#value'])) {

    // Fill select options with saved values
    if (!isset($form_state['triggering_element']['#ajax']['callback'])) {
      $value = $form['field_sport'][$language]['#default_value'][0];
      $options = _supersport_ajax_get_options('league', 'field_sport', $value, $language);
      $form['field_league'][$language]['#options'] = $options;

      $value = $form['field_league'][$language]['#default_value'][0];
      $options = _supersport_ajax_get_options('teams', 'field_league', $value, $language);
      $form['field_teams'][$language]['#options'] = $options;
    }
  }
  else {
    // Node doesn't exist, @ node creation

    // No triggers
    if (!isset($form_state['triggering_element'])) {
      $form['field_league'][$language]['#options'] = $default_option;
      $form['field_teams'][$language]['#options'] = $default_option;
    }

    // A callback hasn't been called
    if (!isset($form_state['triggering_element']['#ajax']['callback'])) {

      // Fixing issue where uploading or removing Video content type causes
      // Illegal action due to form reset
      if(isset($form_state['triggering_element']) and $form_state['triggering_element']['#type'] != 'submit') {
        $form['field_league'][$language]['#options'] = $default_option;
        $form['field_teams'][$language]['#options'] = $default_option;
      }
    }
  }
}

/**
 * Creates a single setting point for future changes if needed
 *
 * @return array
 *  Default option array
 */
function _supersport_ajax_default_option() {
  return array('_none' => t('- Select a value -'));
}

/**
 * Enforces filter on submit
 *
 * @param $form
 *  Called form
 * @param $form_state
 *  Called form state
 */
function _supersport_ajax_form_validate(&$form, &$form_state) {

  // "Save" or "Preview" hit
  if ($form_state['submitted'] == TRUE) {

    $default_option = _supersport_ajax_default_option();

    $language = $form['language']['#value'];

    // Sport field filled?
    $value = $form['field_sport'][$language]['#value'];
    if ($value != '_none' || is_array($value)) {

      // Get legal options from selected sport
      $options = _supersport_ajax_get_options('league', 'field_sport', $value, $language);
      $form['field_league'][$language]['#options'] = $options;

      // Reset teams
      $form['field_teams'][$language]['#options'] = $default_option;

      // League field filled?
      $value = $form['field_league'][$language]['#value'];
      if ($value != '_none' || is_array($value)) {

        $options = _supersport_ajax_get_options('teams', 'field_league', $value, $language);
        $form['field_teams'][$language]['#options'] = $options;
      }
      else {
        $form['field_teams'][$language]['#options'] = $default_option;
      }
    }
    else {
      // Reset other fields
      $form['field_league'][$language]['#options'] = $default_option;
      $form['field_teams'][$language]['#options'] = $default_option;
    }
  }
}
